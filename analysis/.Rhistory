<<<<<<< HEAD
=======
inspire_cleaned$project_year <- factor(inspire_cleaned$project_year)
inspire_random_country_names_impacted <- inspire_cleaned %>%
group_by(project_year) %>%
select(country_impact_name)
write.xlsx(inspire_random_country_names_impacted, file = "02 impact country names per year.xlsx")
inspire_countries_applied <- inspire_cleaned %>%
group_by(project_year) %>%
summarise(count=length(country_application_name))
write.xlsx(inspire_countries_applied, file = "03 application country numbers per year.xlsx")
inspire_random_numbers_applied <- inspire_cleaned %>%
group_by(project_year, country_application) %>%
summarise(count=length(country_application_name))
write.xlsx(inspire_random_numbers_applied, file = "05 application country numbers per year per country.xlsx")
inspire_random_countries_impact <- inspire_cleaned %>%
group_by(project_year) %>%
summarise(count=length(country_impact_name))
write.xlsx(inspire_random_countries_impact, file = "04 impact country numbers per year.xlsx")
inspire_random_numbers_applied <- inspire_cleaned %>%
group_by(project_year, country_application_name) %>%
summarise(count=length(country_application_name))
write.xlsx(inspire_random_numbers_applied, file = "05 application country numbers per year per country.xlsx")
inspire_random_numbers_impact <- inspire_cleaned %>%
group_by(project_year, country_impact_name) %>%
summarise(count=length(country_impact_name))
write.xlsx(inspire_random_numbers_applied, file = "06 impact country numbers per year per country.xlsx")
inspire_numbers_impact <- inspire_cleaned %>%
group_by(project_year, country_impact_name) %>%
summarise(count=length(country_impact_name))
write.xlsx(inspire_numbers_impact, file = "06 impact country numbers per year per country.xlsx")
# application analysis
library(dplyr)
library(jsonlite)
library(openxlsx)
# ===========================================================================
# Processing
# ===========================================================================
# NOTE: json file used is a sample file.
inspire2011 <- fromJSON("cleaned_applications_2011.json")
inspire2012 <- fromJSON("cleaned_applications_2012.json")
inspire2013 <- fromJSON("cleaned_applications_2013.json")
inspire2014 <- fromJSON("cleaned_applications_2014.json")
# pending 2015 cleaning
#inspire2015 <- fromJSON("cleaned_applications_2015.json")
inspire <- rbind(inspire2011, inspire2012, inspire2013, inspire2014)
# pending 2015 cleaning
#inspire <- rbind(inspire2011, inspire2012, inspire2013, inspire2014, inspire2015)
inspire_cleaned <- inspire %>%
select(project_year, country_application, country_application_name, country_impact, country_impact_name) %>%
filter(country_application != "")
inspire_cleaned$project_year <- factor(inspire_cleaned$project_year)
# ===========================================================================
# Name of all countries that applied per year, 2011 - 2015
inspire_country_names_applied <- inspire_cleaned %>%
group_by(project_year) %>%
select(country_application_name)
write.xlsx(inspire_country_names_applied, file = "01 application country names per year.xlsx")
# Name of all countries that were impacted per year, 2011 - 2015
inspire_country_names_impacted <- inspire_cleaned %>%
group_by(project_year) %>%
select(country_impact_name)
write.xlsx(inspire_country_names_impacted, file = "02 impact country names per year.xlsx")
# Number of countries that applied per year, 2011 - 2015
# NOTE: Output is Country Code currently
inspire_countries_applied <- inspire_cleaned %>%
group_by(project_year) %>%
summarise(count=length(country_application_name))
write.xlsx(inspire_countries_applied, file = "03 application country numbers per year.xlsx")
# Number of countries that were impacted per year, 2011 - 2015
inspire_countries_impact <- inspire_cleaned %>%
group_by(project_year) %>%
summarise(count=length(country_impact_name))
write.xlsx(inspire_countries_impact, file = "04 impact country numbers per year.xlsx")
#Application numbers per year for each country, 2011 - 2015
inspire_numbers_applied <- inspire_cleaned %>%
group_by(project_year, country_application_name) %>%
summarise(count=length(country_application_name))
write.xlsx(inspire_numbers_applied, file = "05 application country numbers per year per country.xlsx")
#Impact numbers per year for each country, 2011 - 2015
inspire_numbers_impact <- inspire_cleaned %>%
group_by(project_year, country_impact_name) %>%
summarise(count=length(country_impact_name))
write.xlsx(inspire_numbers_impact, file = "06 impact country numbers per year per country.xlsx")
for (i in 2011:2015) {
temp <- inspire_numbers_impact %>%
filter(project_year == i) %>%
select(country_impact, country_impact_name, count)
temp$project_year <- NULL
names(temp) <- c("code","name", "z")
assign(paste0("impacted",i), temp)
}
output <- list(
year_2011 = impacted2011,
year_2012 = impacted2012,
year_2013 = impacted2013,
year_2014 = impacted2014,
year_2015 = impacted2015
)
write(toJSON(output, pretty = TRUE), "impacted.json")
temp <- inspire_cleaned %>%
group_by(project_year, country_impact_name) %>%
filter(project_year == i) %>%
select(country_impact, country_impact_name, count)
inspire_numbers_impact <- inspire_cleaned %>%
group_by(project_year, country_impact_name) %>%
summarise(count=length(country_impact_name))
View(inspire_numbers_impact)
inspire_numbers_impact_merged <- merge(inspire_numbers_impact, country_impact_lookup)
country_impact_lookup <- inspire_cleaned %>% select(country_impact,country_impact_name)
inspire_numbers_impact_merged <- merge(inspire_numbers_impact, country_impact_lookup)
View(inspire_numbers_impact_merged)
for (i in 2011:2015) {
temp <- inspire_numbers_impact_merged %>%
filter(project_year == i) %>%
select(country_impact, country_impact_name, count)
temp$project_year <- NULL
names(temp) <- c("code","name", "z")
assign(paste0("impacted",i), temp)
}
output <- list(
year_2011 = impacted2011,
year_2012 = impacted2012,
year_2013 = impacted2013,
year_2014 = impacted2014,
year_2015 = impacted2015
)
write(toJSON(output, pretty = TRUE), "impacted.json")
# application analysis
library(dplyr)
library(jsonlite)
library(openxlsx)
# ===========================================================================
# Processing
# ===========================================================================
# NOTE: json file used is a sample file.
inspire2011 <- fromJSON("cleaned_applications_2011.json")
inspire2012 <- fromJSON("cleaned_applications_2012.json")
inspire2013 <- fromJSON("cleaned_applications_2013.json")
inspire2014 <- fromJSON("cleaned_applications_2014.json")
# pending 2015 cleaning
#inspire2015 <- fromJSON("cleaned_applications_2015.json")
inspire <- rbind(inspire2011, inspire2012, inspire2013, inspire2014)
# pending 2015 cleaning
#inspire <- rbind(inspire2011, inspire2012, inspire2013, inspire2014, inspire2015)
inspire_cleaned <- inspire %>%
select(project_year, country_application, country_application_name, country_impact, country_impact_name) %>%
filter(country_application != "")
inspire_cleaned$project_year <- factor(inspire_cleaned$project_year)
# ===========================================================================
# Analysis
# ===========================================================================
# Name of all countries that applied per year, 2011 - 2015
inspire_country_names_applied <- inspire_cleaned %>%
group_by(project_year) %>%
select(country_application_name)
write.xlsx(inspire_country_names_applied, file = "01 application country names per year.xlsx")
# Name of all countries that were impacted per year, 2011 - 2015
inspire_country_names_impacted <- inspire_cleaned %>%
group_by(project_year) %>%
select(country_impact_name)
>>>>>>> 00050e6019f5235fd8a9b5eb7a0987a7fd6372ae
write.xlsx(inspire_country_names_impacted, file = "02 impact country names per year.xlsx")
# Number of countries that applied per year, 2011 - 2015
# NOTE: Output is Country Code currently
inspire_countries_applied <- inspire_cleaned %>%
group_by(project_year) %>%
summarise(count=length(country_application_name))
write.xlsx(inspire_countries_applied, file = "03 application country numbers per year.xlsx")
# Number of countries that were impacted per year, 2011 - 2015
inspire_countries_impact <- inspire_cleaned %>%
group_by(project_year) %>%
summarise(count=length(country_impact_name))
write.xlsx(inspire_countries_impact, file = "04 impact country numbers per year.xlsx")
#Application numbers per year for each country, 2011 - 2015
inspire_numbers_applied <- inspire_cleaned %>%
group_by(project_year, country_application_name) %>%
summarise(count=length(country_application_name))
write.xlsx(inspire_numbers_applied, file = "05 application country numbers per year per country.xlsx")
#Impact numbers per year for each country, 2011 - 2015
inspire_numbers_impact <- inspire_cleaned %>%
group_by(project_year, country_impact_name) %>%
summarise(count=length(country_impact_name))
write.xlsx(inspire_numbers_impact, file = "06 impact country numbers per year per country.xlsx")
# ===========================================================================
# Code for visualization data
# ===========================================================================
country_impact_lookup <- inspire_cleaned %>% select(country_impact,country_impact_name)
inspire_numbers_impact_merged <- merge(inspire_numbers_impact, country_impact_lookup)
for (i in 2011:2015) {
temp <- inspire_numbers_impact_merged %>%
filter(project_year == i) %>%
select(country_impact, country_impact_name, count)
temp$project_year <- NULL
names(temp) <- c("code","name", "z")
assign(paste0("impacted",i), temp)
}
output <- list(
year_2011 = impacted2011,
year_2012 = impacted2012,
year_2013 = impacted2013,
year_2014 = impacted2014,
year_2015 = impacted2015
)
write(toJSON(output, pretty = TRUE), "impacted.json")
View(inspire_cleaned)
test2 <- inspire %>% filter(country_application=="")
View(test2)
# application analysis
library(dplyr)
library(jsonlite)
library(openxlsx)
# ===========================================================================
# Processing
# ===========================================================================
# NOTE: json file used is a sample file.
inspire2011 <- fromJSON("cleaned_applications_2011.json")
inspire2012 <- fromJSON("cleaned_applications_2012.json")
inspire2013 <- fromJSON("cleaned_applications_2013.json")
inspire2014 <- fromJSON("cleaned_applications_2014.json")
# pending 2015 cleaning
#inspire2015 <- fromJSON("cleaned_applications_2015.json")
inspire <- rbind(inspire2011, inspire2012, inspire2013, inspire2014)
# pending 2015 cleaning
#inspire <- rbind(inspire2011, inspire2012, inspire2013, inspire2014, inspire2015)
inspire_cleaned <- inspire %>%
select(project_year, country_application, country_application_name, country_impact, country_impact_name) %>%
filter(country_application != "")
inspire_cleaned$project_year <- factor(inspire_cleaned$project_year)
# ===========================================================================
# Analysis
# ===========================================================================
# Name of all countries that applied per year, 2011 - 2015
inspire_country_names_applied <- inspire_cleaned %>%
group_by(project_year) %>%
select(country_application_name)
write.xlsx(inspire_country_names_applied, file = "01 application country names per year.xlsx")
# Name of all countries that were impacted per year, 2011 - 2015
inspire_country_names_impacted <- inspire_cleaned %>%
group_by(project_year) %>%
select(country_impact_name)
write.xlsx(inspire_country_names_impacted, file = "02 impact country names per year.xlsx")
# Number of countries that applied per year, 2011 - 2015
# NOTE: Output is Country Code currently
inspire_countries_applied <- inspire_cleaned %>%
group_by(project_year) %>%
summarise(count=length(country_application_name))
write.xlsx(inspire_countries_applied, file = "03 application country numbers per year.xlsx")
# Number of countries that were impacted per year, 2011 - 2015
inspire_countries_impact <- inspire_cleaned %>%
group_by(project_year) %>%
summarise(count=length(country_impact_name))
write.xlsx(inspire_countries_impact, file = "04 impact country numbers per year.xlsx")
#Application numbers per year for each country, 2011 - 2015
inspire_numbers_applied <- inspire_cleaned %>%
group_by(project_year, country_application_name) %>%
summarise(count=length(country_application_name))
write.xlsx(inspire_numbers_applied, file = "05 application country numbers per year per country.xlsx")
#Impact numbers per year for each country, 2011 - 2015
inspire_numbers_impact <- inspire_cleaned %>%
group_by(project_year, country_impact_name) %>%
summarise(count=length(country_impact_name))
write.xlsx(inspire_numbers_impact, file = "06 impact country numbers per year per country.xlsx")
# ===========================================================================
# Code for visualization data
# ===========================================================================
country_impact_lookup <- inspire_cleaned %>% select(country_impact,country_impact_name)
inspire_numbers_impact_merged <- merge(inspire_numbers_impact, country_impact_lookup)
for (i in 2011:2015) {
temp <- inspire_numbers_impact_merged %>%
filter(project_year == i) %>%
select(country_impact, country_impact_name, count)
temp$project_year <- NULL
names(temp) <- c("code","name", "z")
assign(paste0("impacted",i), temp)
}
output <- list(
year_2011 = impacted2011,
year_2012 = impacted2012,
year_2013 = impacted2013,
year_2014 = impacted2014,
year_2015 = impacted2015
)
write(toJSON(output, pretty = TRUE), "impacted.json")
test2 <- inspire %>% filter(country_application=="")
View(test2)
nrow(inspire)
134/1883
View(inspire_countries_applied)
View(inspire_country_names_applied)
View(inspire_countries_impact)
View(inspire_country_names_impacted)
View(inspire_numbers_impact_merged)
View(inspire_numbers_impact)
unique(inspire_numbers_impact$country_impact_name)
write(unique(inspire_numbers_impact$country_impact_name), unique_countries.txt)
write(unique(inspire_numbers_impact$country_impact_name), "unique_countries.txt")
country_impact_lookup <- inspire_cleaned %>% select(country_impact,country_impact_name)
View(country_impact_lookup)
View(inspire_countries_impact)
View(inspire_numbers_impact)
inspire_numbers_impact_merged <- merge(inspire_numbers_impact, country_impact_lookup)
View(inspire_numbers_impact_merged)
inspire_numbers_impact_merged <- full_join(inspire_numbers_impact, country_impact_lookup)
View(inspire_numbers_impact_merged)
inspire_numbers_impact_merged <- left_join(inspire_numbers_impact, country_impact_lookup)
View(inspire_numbers_impact_merged)
View(inspire_numbers_impact)
View(country_impact_lookup)
?left_join
inspire_numbers_impact_merged <- left_join(inspire_numbers_impact, country_impact_lookup, by = "country_impact_name")
View(inspire_numbers_impact_merged)
View(country_impact_lookup)
country_impact_lookup <- inspire_cleaned %>% select(country_impact,country_impact_name) %>% unique()
View(country_impact_lookup)
country_impact_lookup <- inspire_cleaned %>% select(country_impact,country_impact_name) %>% unique()
inspire_numbers_impact_merged <- left_join(inspire_numbers_impact, country_impact_lookup, by = "country_impact_name")
View(inspire_numbers_impact_merged)
# application analysis
library(dplyr)
library(jsonlite)
library(openxlsx)
# ===========================================================================
# Processing
# ===========================================================================
# NOTE: json file used is a sample file.
inspire2011 <- fromJSON("cleaned_applications_2011.json")
inspire2012 <- fromJSON("cleaned_applications_2012.json")
inspire2013 <- fromJSON("cleaned_applications_2013.json")
inspire2014 <- fromJSON("cleaned_applications_2014.json")
# pending 2015 cleaning
#inspire2015 <- fromJSON("cleaned_applications_2015.json")
inspire <- rbind(inspire2011, inspire2012, inspire2013, inspire2014)
# pending 2015 cleaning
#inspire <- rbind(inspire2011, inspire2012, inspire2013, inspire2014, inspire2015)
inspire_cleaned <- inspire %>%
select(project_year, country_application, country_application_name, country_impact, country_impact_name) %>%
filter(country_application != "")
inspire_cleaned$project_year <- factor(inspire_cleaned$project_year)
# ===========================================================================
# Analysis
# ===========================================================================
# Name of all countries that applied per year, 2011 - 2015
inspire_country_names_applied <- inspire_cleaned %>%
group_by(project_year) %>%
select(country_application_name)
write.xlsx(inspire_country_names_applied, file = "01 application country names per year.xlsx")
# Name of all countries that were impacted per year, 2011 - 2015
inspire_country_names_impacted <- inspire_cleaned %>%
group_by(project_year) %>%
select(country_impact_name)
write.xlsx(inspire_country_names_impacted, file = "02 impact country names per year.xlsx")
# Number of countries that applied per year, 2011 - 2015
# NOTE: Output is Country Code currently
inspire_countries_applied <- inspire_cleaned %>%
group_by(project_year) %>%
summarise(count=length(country_application_name))
write.xlsx(inspire_countries_applied, file = "03 application country numbers per year.xlsx")
# Number of countries that were impacted per year, 2011 - 2015
inspire_countries_impact <- inspire_cleaned %>%
group_by(project_year) %>%
summarise(count=length(country_impact_name))
write.xlsx(inspire_countries_impact, file = "04 impact country numbers per year.xlsx")
#Application numbers per year for each country, 2011 - 2015
inspire_numbers_applied <- inspire_cleaned %>%
group_by(project_year, country_application_name) %>%
summarise(count=length(country_application_name))
write.xlsx(inspire_numbers_applied, file = "05 application country numbers per year per country.xlsx")
#Impact numbers per year for each country, 2011 - 2015
inspire_numbers_impact <- inspire_cleaned %>%
group_by(project_year, country_impact_name) %>%
summarise(count=length(country_impact_name))
write.xlsx(inspire_numbers_impact, file = "06 impact country numbers per year per country.xlsx")
# ===========================================================================
# Code for visualization data
# ===========================================================================
country_impact_lookup <- inspire_cleaned %>% select(country_impact,country_impact_name) %>% unique()
inspire_numbers_impact_merged <- left_join(inspire_numbers_impact, country_impact_lookup, by = "country_impact_name")
for (i in 2011:2015) {
temp <- inspire_numbers_impact_merged %>%
filter(project_year == i) %>%
select(country_impact, country_impact_name, count)
temp$project_year <- NULL
names(temp) <- c("code","name", "z")
assign(paste0("impacted",i), temp)
}
output <- list(
year_2011 = impacted2011,
year_2012 = impacted2012,
year_2013 = impacted2013,
year_2014 = impacted2014,
year_2015 = impacted2015
)
write(toJSON(output, pretty = TRUE), "impacted.json")
devtoolS::session_info
devtoolS::session_info()
devtools::session_info()
source('D:/ds/application analysis.R')
View(country_impact_lookup)
View(inspire_country_names_applied)
inspire_country_names_applied <- inspire_cleaned %>%
group_by(project_year) %>%
select(country_application_name) %>%
unique()
View(inspire_countries_applied)
View(inspire_country_names_applied)
?unique()
inspire_country_names_impacted <- inspire_cleaned %>%
group_by(project_year) %>%
select(country_impact_name) %>%
unique()
View(inspire_country_names_impacted)
source('D:/ds/application analysis.R')
View(inspire_country_names_impacted)
source('D:/ds/application analysis.R')
test <- toJSON("impacted.json")
cat(test)
test <- fromJSON("impacted.json")
View(inspire)
View(temp)
getwd()
?write.xlsx
source('D:/ds/analysis/application analysis.R')
source('D:/ds/analysis/application analysis.R')
?fromJSON
source('D:/ds/analysis/application analysis.R')
source('D:/ds/analysis/application analysis.R')
getwd()
setwd("/data")
setwd("data")
getwd()
setwd("..")
getwd()
dirname(parent.frame(2)$ofile)
dirname()
pwd()
?dirname
file.path
file.path()
dirname(parent.frame(2)$ofile)
parent.frame(2)$ofile
parent.frame(2)
str(parent.frame(2))
(parent.frame(2)$file
a
(parent.frame(2)$ofile
(parent.frame(2)$ofile)
)
<<<<<<< HEAD
inspire2011 <- fromJSON("../data/cleaned_applications_2011.json")
inspire2012 <- fromJSON("../data/cleaned_applications_2012.json")
inspire2013 <- fromJSON("../data/cleaned_applications_2013.json")
inspire2014 <- fromJSON("../data/cleaned_applications_2014.json")
inspire2015 <- fromJSON("../data/cleaned_applications_2015.json")
inspire <- rbind(inspire2011, inspire2012, inspire2013, inspire2014, inspire2015)
inspire <- inspire %>%
select(project_year, country_application, country_application_name, country_impact, country_impact_name) #%>%
#filter(country_application != "")
inspire$project_year <- factor(inspire$project_year)
inspire_country_names_applied_blanks <- inspire %>%
filter(country_application_name = "" | country_application = "")
inspire_country_names_applied_blanks <- inspire %>%
filter(country_application_name == "" | country_application == "")
setwd("d:/code/repos/un-women-proj-inspire/")
setwd("D:/code/repos/un-women-proj-inspire/analysis")
=======
inspire_country_names_applied <- inspire_cleaned %>%
group_by(project_year) %>%
select(country_application_name) %>%
unique() %>%
arrange(desc(country_application_name))
>>>>>>> 00050e6019f5235fd8a9b5eb7a0987a7fd6372ae
library(dplyr)
library(jsonlite)
library(openxlsx)
# ===========================================================================
# Processing
# Expected Column Names :project_year, country_application, country_application_name,
#                        country_impact, country_impact_name
# ===========================================================================
<<<<<<< HEAD
inspire2011 <- fromJSON("../data/cleaned_applications_2011.json")
inspire2012 <- fromJSON("../data/cleaned_applications_2012.json")
inspire2013 <- fromJSON("../data/cleaned_applications_2013.json")
inspire2014 <- fromJSON("../data/cleaned_applications_2014.json")
inspire2015 <- fromJSON("../data/cleaned_applications_2015.json")
inspire <- rbind(inspire2011, inspire2012, inspire2013, inspire2014, inspire2015)
inspire <- inspire %>%
select(project_year, country_application, country_application_name, country_impact, country_impact_name) #%>%
#filter(country_application != "")
inspire$project_year <- factor(inspire$project_year)
inspire_country_names_applied_blanks <- inspire %>%
filter(country_application_name == "" | country_application == "")
View(inspire_country_names_applied)
View(inspire_country_names_applied_blanks)
View(inspire_countries_applied)
View(inspire_country_names_applied)
View(inspire_country_names_applied_blanks)
View(inspire_country_names_applied_blanks)
inspire_applied_blanks <- inspire %>%
filter(country_application_name == "" | country_application == "")
inspire_applied_test <- setdiff(inspire,inspire_applied_blanks)
inspire_applied <- inspire %>%
filter(country_application_name != "" & country_application != "")
View(inspire_applied_test)
inspire_applied <- inspire %>%
filter(country_application_name != "" & country_application != "")
View(inspire_applied)
inspire_applied_test <- setdiff(inspire,inspire_applied_blanks) %>% arrange(country_application_name)
View(inspire_applied_test)
inspire_applied <- inspire %>%
filter(country_application_name != "" & country_application != "") %>% arrange(country_application_name)
View(inspire_applied)
inspire_applied <- inspire %>%
filter(country_application_name != "" & country_application != "") %>%
arrange(country_application_name) %>% distinct()
View(inspire_applied)
View(inspire_applied_blanks)
inspire2011 <- fromJSON("../data/cleaned_applications_2011.json")
inspire2012 <- fromJSON("../data/cleaned_applications_2012.json")
inspire2013 <- fromJSON("../data/cleaned_applications_2013.json")
inspire2014 <- fromJSON("../data/cleaned_applications_2014.json")
inspire2015 <- fromJSON("../data/cleaned_applications_2015.json")
inspire <- rbind(inspire2011, inspire2012, inspire2013, inspire2014, inspire2015)
# inspire <- inspire %>%
#     select(project_year, country_application, country_application_name, country_impact, country_impact_name) #%>%
#     #filter(country_application != "")
inspire$project_year <- factor(inspire$project_year)
# processes applied countries and impact countries differently
# filters out blank country codes or country names that are blank
inspire_applied_blanks <- inspire %>%
filter(country_application_name == "" | country_application == "")
View(inspire_applied_blanks)
inspire <- rbind(inspire2011, inspire2012, inspire2013, inspire2014, inspire2015)
inspire <- inspire %>%
select(project_year, country_application, country_application_name, country_impact, country_impact_name) #%>%
#filter(country_application != "")
inspire$project_year <- factor(inspire$project_year)
# processes applied countries and impact countries differently
# filters out blank country codes or country names that are blank
inspire_applied_blanks <- inspire %>%
filter(country_application_name == "" | country_application == "")
View(inspire_applied_blanks)
View(inspire_applied_blanks)
inspire_applied <- inspire %>%
filter(country_application_name != "" & country_application != "") %>%
arrange(country_application_name)
View(inspire_applied)
inspire_impact_blanks <- inspire %>%
filter(country_impact_name == "" | country_impact == "")
inspire2011 <- fromJSON("../data/cleaned_applications_2011.json")
inspire2012 <- fromJSON("../data/cleaned_applications_2012.json")
inspire2013 <- fromJSON("../data/cleaned_applications_2013.json")
inspire2014 <- fromJSON("../data/cleaned_applications_2014.json")
inspire2015 <- fromJSON("../data/cleaned_applications_2015.json")
inspire <- rbind(inspire2011, inspire2012, inspire2013, inspire2014, inspire2015)
inspire <- inspire %>%
select(project_year, country_application, country_application_name, country_impact, country_impact_name) #%>%
#filter(country_application != "")
inspire$project_year <- factor(inspire$project_year)
# processes applied countries and impact countries differently
# filters out blank country codes or country names that are blank
inspire_applied_blanks <- inspire %>%
filter(country_application_name == "" | country_application == "")
inspire_applied <- inspire %>%
filter(country_application_name != "" & country_application != "") %>%
arrange(country_application_name)
inspire_impact_blanks <- inspire %>%
filter(country_impact_name == "" | country_impact == "")
inspire_impact <- inspire %>%
filter(country_impact_name != "" & country_impact != "")
View(inspire_impact)
inspire_impact <- inspire %>%
filter(country_impact_name != "" & country_impact != "") %>%
arrange(country_application_name)
View(inspire_impact)
?write.xlsx
source('D:/code/repos/un-women-proj-inspire/analysis/application analysis.R')
View(inspire_country_names_applied)
inspire_country_names_applied <- inspire_applied %>%
group_by(project_year) %>%
select(country_application_name) %>%
arrange(country_application_name)
View(inspire_country_names_applied)
inspire_country_names_applied <- inspire_applied %>%
group_by(project_year) %>%
select(country_application_name) %>%
unique() %>%
arrange(country_application_name)
View(inspire_countries_applied)
View(inspire_country_names_applied)
inspire_country_names_applied <- inspire_applied %>%
group_by(project_year) %>%
select(country_application_name) %>%
distinct() %>%
arrange(country_application_name)
View(inspire_country_names_applied)
inspire_country_names_applied <- inspire_applied %>%
group_by(project_year) %>%
select(country_application_name) %>%
distinct_() %>%
arrange(country_application_name)
View(inspire_country_names_applied)
inspire_country_names_applied <- inspire_applied %>%
=======
inspire2011 <- fromJSON("cleaned_applications_2011.json")
inspire2012 <- fromJSON("cleaned_applications_2012.json")
inspire2013 <- fromJSON("cleaned_applications_2013.json")
inspire2014 <- fromJSON("cleaned_applications_2014.json")
inspire2015 <- fromJSON("cleaned_applications_2015.json")
inspire <- rbind(inspire2011, inspire2012, inspire2013, inspire2014, inspire2015)
inspire_cleaned <- inspire %>%
select(project_year, country_application, country_application_name, country_impact, country_impact_name) %>%
filter(country_application != "")
inspire_cleaned$project_year <- factor(inspire_cleaned$project_year)
inspire_country_names_applied <- inspire_cleaned %>%
group_by(project_year) %>%
select(country_application_name) %>%
unique() %>%
arrange(desc(country_application_name))
View(inspire_country_names_applied)
inspire_country_names_applied <- inspire_cleaned %>%
>>>>>>> 00050e6019f5235fd8a9b5eb7a0987a7fd6372ae
group_by(project_year) %>%
select(country_application_name) %>%
unique() %>%
arrange(country_application_name)
View(inspire_country_names_applied)
<<<<<<< HEAD
inspire_country_names_applied <- inspire_applied %>%
group_by(project_year) %>%
select(country_application_name) %>%
distinct(country_application_name) %>%
arrange(country_application_name)
View(inspire_countries_applied)
View(inspire_country_names_applied)
inspire_country_names_impacted <- inspire_impact %>%
group_by(project_year) %>%
select(country_impact_name) %>%
distinct(country_impact_name) %>%
arrange(country_impact_name)
View(inspire_country_names_impacted)
inspire_countries_applied <- inspire_applied %>%
group_by(project_year) %>%
summarise(count=length(country_application_name))
write.xlsx(inspire_countries_applied, file = "../data/03 application country numbers per year.xlsx")
View(inspire_countries_applied)
inspire_countries_impact <- inspire_impact %>%
group_by(project_year) %>%
summarise(count=length(country_impact_name))
View(inspire_countries_impact)
View(inspire_countries_applied)
View(inspire_countries_impact)
inspire_numbers_applied <- inspire_applied %>%
group_by(project_year, country_application_name) %>%
summarise(count=length(country_application_name))
inspire_numbers_impact <- inspire_impact %>%
group_by(project_year, country_impact_name) %>%
summarise(count=length(country_impact_name))
View(inspire_numbers_applied)
View(inspire_numbers_impact)
numbers_diff <- setdiff(inspire_numbers_applied,inspire_numbers_impact)
country_impact_lookup <- inspire_impact %>%
select(country_impact,country_impact_name) %>%
distinct(country_impact_name)
View(country_impact_lookup)
country_impact_lookup <- inspire_impact %>%
select(country_impact,country_impact_name) %>%
unique()
View(country_impact_lookup)
country_impact_lookup <- inspire_impact %>%
select(country_impact,country_impact_name) %>%
distinct(country_impact_name) %>%
arrange(country_impact_name)
View(country_impact_lookup)
inspire_numbers_impact_merged <- left_join(inspire_numbers_impact, country_impact_lookup, by = "country_impact_name")
View(inspire_numbers_impact_merged)
for (i in 2011:2015) {
temp <- inspire_numbers_impact_merged %>%
filter(project_year == i) %>%
select(country_impact, country_impact_name, count)
temp$project_year <- NULL
names(temp) <- c("code","name", "z")
assign(paste0("impacted",i), temp)
}
output <- list(
year_2011 = impacted2011,
year_2012 = impacted2012,
year_2013 = impacted2013,
year_2014 = impacted2014,
year_2015 = impacted2015
)
write(toJSON(output, pretty = TRUE), "../data/impacted.json")
source('D:/code/repos/un-women-proj-inspire/analysis/application analysis.R')
library(readr)
source('D:/code/repos/un-women-proj-inspire/analysis/application analysis.R')
source('D:/code/repos/un-women-proj-inspire/analysis/application analysis.R')
source('D:/code/repos/un-women-proj-inspire/analysis/application analysis.R')
source('D:/code/repos/un-women-proj-inspire/analysis/application analysis.R')
?write_csv
write_csv(inspire_applied_blanks,"../data/filtered_applied_countries.csv")
write_csv(inspire_impact_blanks,"../data/filtered_impact_countries.csv")
=======
write.xlsx(inspire_country_names_applied, file = "01 application country names per year.xlsx")
inspire_country_names_impacted <- inspire_cleaned %>%
group_by(project_year) %>%
select(country_impact_name) %>%
unique() %>%
arrange(country_impact_name)
View(inspire_country_names_impacted)
View(inspire_countries_applied)
View(inspire_numbers_applied)
source('D:/code/repos/un-women-proj-inspire/analysis/application analysis.R')
source('D:/code/repos/un-women-proj-inspire/analysis/application analysis.R')
setwd("d:/code/repos/un-women-proj-inspire/")
source('D:/code/repos/un-women-proj-inspire/analysis/application analysis.R')
setwd("d:/code/repos/un-women-proj-inspire/analysis")
source('D:/code/repos/un-women-proj-inspire/analysis/application analysis.R')
View(inspire_country_names_applied)
View(inspire_cleaned)
View(inspire_numbers_applied)
View(inspire_numbers_impact)
View(inspire_cleaned)
inspired_cleaned %>% filter(country_impact=="" || country_application=="")
inspire_cleaned %>% filter(country_impact=="" || country_application=="")
inspire_cleaned %>% filter(country_impact=="")
inspire_cleaned %>% filter(country_impact=="" | country_application=="")
inspire_cleaned %>% filter(country_application=="")
inspire_cleaned %>% filter(country_impact=="")
View(inspire_numbers_impact)
View(inspire_numbers_applied)
inspire_cleaned %>% filter(country_impact=="" | country_application=="" | country_application_name=="" | country_impact_name=="")
this.dir <- dirname(parent.frame(2)$ofile)
source('D:/code/repos/un-women-proj-inspire/analysis/application analysis.R')
>>>>>>> 00050e6019f5235fd8a9b5eb7a0987a7fd6372ae
source('D:/code/repos/un-women-proj-inspire/analysis/application analysis.R')
